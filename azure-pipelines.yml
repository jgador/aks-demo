trigger:
  branches:
    include:
    - main

jobs:
- job: 'build_aks_demo'
  displayName: 'Build aks-demo'

  pool:
    vmImage: 'ubuntu-22.04'
  
  variables:
  - group: aks-demo-vars
  - name: ImageVersion
    value: '$(GitVersion.FullSemVer)'
  - name: ChartPath
    value: '$(Build.SourcesDirectory)/src/AKS.Demo/charts/aks-demo'

  steps:
  - checkout: self
    displayName: 'Checkout'
    persistCredentials: true
    fetchDepth: 0
    
  - task: UseDotNet@2
    displayName: 'Install .NET 8'
    inputs:
      version: '8.x'

  - bash: |
      dotnet restore
    displayName: 'Run dotnet restore'

  - task: gitversion/setup@0
    displayName: 'Setup GitVersion'
    inputs:
      versionSpec: '5.x'
      includePrerelease: true

  - task: gitversion/execute@0
    displayName: 'Execute GitVersion'
    inputs:
      useConfigFile: true
      configFilePath: 'GitVersion.yml'

  - task: Bash@3
    displayName: 'Set Version'
    inputs:
      targetType: 'inline'
      script: |
        echo 'Setting Build.BuildNumber to current version.'
        echo '##vso[build.updatebuildnumber]$(ImageVersion)'

  - bash: 
      docker build -f Dockerfile --tag cebuaksdemo.azurecr.io/aks.demo:latest --no-cache .
      docker tag cebuaksdemo.azurecr.io/aks.demo:latest cebuaksdemo.azurecr.io/aks.demo:$(ImageVersion)
    displayName: 'Build Docker Image'

  - bash: |
      echo $(registry.password) | docker login cebuaksdemo.azurecr.io -u $(registry.username) --password-stdin
      docker push cebuaksdemo.azurecr.io/aks.demo:latest
      docker push cebuaksdemo.azurecr.io/aks.demo:$(ImageVersion)
    displayName: 'Push Docker to Registry'

  - task: HelmInstaller@1
    displayName: 'Install Helm'
    inputs:
      helmVersionToInstall: 3.1.0

  - bash: helm package --version $(ImageVersion) --destination $(Build.ArtifactStagingDirectory) $(ChartPath)
    displayName: 'Package Helm Chart'

  - bash: az acr helm push -n cebuaksdemo.azurecr.io -u $(registry.username) -p $(registry.password) $(Build.ArtifactStagingDirectory)/aks-demo-$(ImageVersion).tgz --force
    displayName: 'Push Helm Chart'

  - task: CopyFiles@2
    displayName: 'Copy Values Files'
    inputs:
      sourceFolder: $(ChartPath)
      contents: '*'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Values Files'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'